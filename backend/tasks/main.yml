---
# tasks file for backend
  - name: Sudo apt update
    ansible.builtin.apt:
       update_cache: yes
  - name: Install required packages
    ansible.builtin.apt:
      name: "{{ item }}"
      state: present
    loop:
        - python3
        - python3-pip
        - python3-dev
        - default-libmysqlclient-dev
        - build-essential
  - name: Install virtualenv using pip3
    ansible.builtin.pip:
      name: virtualenv
      executable: pip3 
        #- name: Clone the repository into /app directory
        #ansible.builtin.git:
        # repo: 'https://github.com/peyyala7hills/new_chatapp.git'
        #dest: /app
        # clone: yes
        # update: yes
        #become_user: chatapp
  - name: Create chatapp user
    ansible.builtin.user:
      name: chatapp
      home: /home/chatapp
      shell: /bin/bash
      state: present
      create_home: yes
  - name: Change ownership of /app directory
    ansible.builtin.file:
      path: /app
      owner: chatapp
      group: chatapp
      recurse: yes
  - name: Change to /app directory, activate the virtual environment, and install packages
    ansible.builtin.shell: |
      cd /app &&
      . venv/bin/activate &&
      pip install django &&
      pip install -r requirements.txt &&
      pip install mysqlclient
    become_user: chatapp
  - name: Update DATABASES configuration in settings.py
    ansible.builtin.lineinfile:
      path: /app/fundoo/fundoo/settings.py
      regexp: '^DATABASES = {'
      line: |
        DATABASES = { 'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.environ.get('CHATDB'),
        'USER': os.environ.get('CHATDBUSER'),
        'PASSWORD': os.environ.get('CHATDBPASSWORD'),
        'HOST': os.environ.get('CHATDBHOST'),
        'PORT': '3306', }
        }
      create: yes
      backup: yes
      state: present
        # - name: Ensure environment variables are set in /etc/bash.bashrc
        # ansible.builtin.lineinfile:
        # path: /etc/bash.bashrc
        # line: "{{ item }}"
        # state: present
        #create: yes
        # loop:
        # - "export CHATDB='chatapp'"
        #  - "export CHATDBUSER='chatapp'"
        #  - "export CHATDBPASSWORD='123'"
        # - "export CHATDBHOST=18.0.254.185"
        #- name: Correct DATABASES configuration in settings.py
        #ansible.builtin.blockinfile:
        # path: /app/fundoo/fundoo/settings.py
        # block: |
        #  DATABASES = {
        #    'default': {
        #       'ENGINE': 'django.db.backends.mysql',
        #       'NAME': os.environ.get('CHATDB'),
        #       'USER': os.environ.get('CHATDBUSER'),
        #       'PASSWORD': os.environ.get('CHATDBPASSWORD'),
        #       'HOST': os.environ.get('CHATDBHOST'),
        #       'PORT': '3306',
        #   }
        # }
        # marker: "# {mark} ANSIBLE MANAGED BLOCK"
        # insertafter: '^DATABASES ='
  - name: Ensure virtual environment is activated, install Django, and required packages
    ansible.builtin.shell: |
      source /app/venv/bin/activate && \
      pip install -r /app/requirements.txt && \
      pip install django mysqlclient
    args:
      executable: /bin/bash  # Use bash to support source command

  - name: Check if Django is installed
    ansible.builtin.shell: |
      source /app/venv/bin/activate && \
      python3 -m django --version
    args:
      executable: /bin/bash  # Use bash to support source command

        # - name: Run Django makemigrations
        #ansible.builtin.shell: |
        # source /app/venv/bin/activate && \
        # python3 /app/fundoo/manage.py makemigrations
        # args:
        # executable: /bin/bash  # Use bash to support source command

        #- name: Run Django migrate
        #ansible.builtin.shell: |
        #source /app/venv/bin/activate && \
        #python3 /app/fundoo/manage.py migrate
        #args:
        #executable: /bin/bash  # Use bash to support source command
        # - name: Create systemd service file for Chatapp
        # ansible.builtin.copy:
        # dest: /lib/systemd/system/chatapp.service
        # content: |
        #  [Unit]
        #  Description=Chatapp Service
        # After=network.target
        # 
        #[Service]
        # User=chatapp
        # Group=chatapp
        # EnvironmentFile=/etc/bash.bashrc
        # WorkingDirectory=/app/fundoo
        # ExecStart=/bin/bash -c "cd /app && source venv/bin/activate && cd /app/fundoo && /app/venv/bin/gunicorn --workers 3 --bind 0.0.0.0:8000 fundoo.wsgi:application"

        # [Install]
        # WantedBy=multi-user.target
  - name: Enable chatapp service to start on boot
    ansible.builtin.systemd:
      name: chatapp.service
      enabled: yes
      state: started

  - name: Start chatapp service
    ansible.builtin.systemd:
      name: chatapp.service
      state: started
  - name: Ensure systemd is reloaded
    ansible.builtin.systemd:
      daemon_reload: yes      
